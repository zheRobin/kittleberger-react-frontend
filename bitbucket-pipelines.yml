# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

pipelines:
  branches: # Branch-specific pipelines definitions
    frontend_dev:
      - step:
          name: Building the app
          image: node:18
          variables:
            REACT_APP_API_URL: $REACT_APP_API_URL
          script:
            - npm install --legacy-peer-deps
            - export CI=false
            - export REACT_APP_API_URL=$REACT_APP_API_URL
            - npm run build
          artifacts:
            - build/**
      - step:
          name: Deploying the app to S3
          image: amazon/aws-cli
          deployment: production
          script:
            - mkdir -p $HOME/.aws
            - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > $HOME/.aws/credentials
            - cat $HOME/.aws/credentials
            - aws s3 sync build/ s3://coposing-frontend
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws s3api put-public-access-block --bucket coposing-frontend --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"
            - aws cloudfront create-invalidation --distribution-id E2TWTWLGL41TKZ --paths /\*